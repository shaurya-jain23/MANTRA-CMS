import React from 'react'
import { Button, Select } from '../index';
import {SquarePen} from 'lucide-react'

const PICard = ({invoice, onEdit, onStatusChange, userData }) => {
  const userRole = userData?.role;
  const isAuthor = invoice?.generated_by_id === userData?.uid;
  
  const showEditButton = isAuthor || userRole === 'superuser';
  const showGeneratedBy = userRole === 'admin' || userRole === 'superuser';
  
  return (
    <>
    <div className={`bg-white p-4 flex flex-col justify-start border border-gray-200 lg:border-0 lg:border-b-1 lg:grid ${showGeneratedBy? 'lg:grid-cols-9' : 'lg:grid-cols-8'} lg:gap-3 lg:items-center lg:text-center`}>
      <div className="mb-4 lg:mb-0 text-md pb-2 lg:pb-0 lg:col-span-1 flex text-start">
        <p className="font-semibold text-blue-700">{invoice.pi_number}</p>
      </div>

      <div className="lg:col-span-2 mb-2 lg:mb-0 flex lg:flex-col text-sm gap-1 lg:gap-0  flex-wrap">
        <p className="font-normal lg:hidden lg:text-xs text-gray-500">Client:</p>
        <p className="font-normal">{invoice.billing.firm}</p>
        {/* <p className="text-gray-500">{invoice.contact_number}</p> */}
      </div>
      
      <div className="mb-2 lg:mb-0 flex lg:flex-col text-sm gap-1 lg:gap-0  flex-wrap">
        <p className="font-normal lg:hidden lg:text-xs text-gray-500">Amount:</p>
        <p className="text-sm">{invoice.totals.grandTotal}</p>
      </div>

      <div className="mb-2 lg:mb-0 flex lg:flex-col text-sm gap-1 lg:gap-0 flex-wrap">
        <p className="font-normal lg:hidden lg:text-xs text-gray-500">Invoice Date:</p>
        <p className="text-sm">{invoice.pi_date}</p>
      </div>
       {showGeneratedBy && (
      <div className="mb-4 lg:mb-0 text-sm flex lg:flex-col gap-1 lg:gap-0 flex-wrap">
        <p className="font-normal lg:hidden lg:text-xs text-gray-500">Generated By:</p>
        <p>{invoice.generated_by_name}</p>
      </div>) 
      }
      <div className="mb-2 lg:mb-0 flex lg:flex-col text-sm gap-1 lg:gap-0 flex-wrap lg:justify-center">
          <div
            className={`py-1/2 px-2 flex lg:flex items-center gap-1 text-[10px] leading-5 font-bold rounded-full outline ${
              invoice.status === 'Paid' ? 'bg-emerald-100 text-emerald-800' : invoice.status === 'Pending' ? 'bg-amber-100 text-amber-800' : 'bg-red-100 text-red-800' 
            }`}>
            <div className='h-2 w-2 rounded-full bg-white outline'></div>{invoice.status.toUpperCase()}
          </div>
      </div>

      <div className="lg:col-span-2 flex flex-row justify-around lg:pt-0 lg:items-center gap-2 lg:mt-0 pt-4">
        <Select
            placeholder="Select status"
            defaultValue={invoice.status}
            onChange={(e) => onStatusChange(invoice.id, e.target.value)}
            className="text-xs lg:!w-1/2"
            options={['Paid', 'Pending']}
          />
        
        {showEditButton &&
            <Button
              type="submit" 
              bgColor= 'bg-white'
              textColor='text-black'
              className="hover:bg-gray-100 border border-gray-100 text-gray-500 flex justify-center !w-fit !p-2" 
              onClick={() =>{onEdit({...invoice, district: modifedDistrict})}}>
            <SquarePen size={18}/>
          </Button>
          }
      </div>
    </div>
    </>
  )
}

export default PICard